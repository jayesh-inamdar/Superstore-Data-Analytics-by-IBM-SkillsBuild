# -*- coding: utf-8 -*-
"""IBM_DataAnalyticsAssignment_JayeshInamdar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zZNEccM9NCD4sdFnDrIafcHXoptA1Cso

##Name-Jayesh Nishikant Inamdar,
##Skillsbuild id- jayeshinamdar316@gmail.com
##Domain - Data Analytics
##College name - Deogiri Institute od Engineering and Management Studies, Aurangabad
##State - Maharashtra
##Start date- 12/06/2023
##End date- 24/07/2023
"""

# Commented out IPython magic to ensure Python compatibility.
# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

# Read superstore.csv dataset

superstore = pd.read_csv('SampleSuperstore.csv')

# Review few rows of the dataset

superstore.head()

# Shape of data set

superstore.shape

# Summarised information about the dataset

superstore.info()

"""1. Data Cleaning"""

# Find the number of null values for all columns

superstore.isnull().sum()

# Find the number of duplicate data

superstore.duplicated().sum()

# Show the duplicated rows

superstore[superstore.duplicated(keep = 'last')]

# Drop the duplicated rows

superstore.drop_duplicates(inplace = True)

# Find the no. of rows and columns

superstore.shape

"""2. Exploratory Data Analytics"""

# Q.1 Which Category is Best Selling and profitable One

# Group the columns (sales, profit and quantity) by category

category_analysis = pd.DataFrame(superstore.groupby(['Category'])[['Sales', 'Profit', 'Quantity']].sum())
category_analysis

# Sets for grouped plots


figure, axis = plt.subplots(1, 3, figsize=(8, 5))
#set colours to the graph
colors = ['#F72585','#7209B8','#C125F7','#F72531']

# Plot the barplots

categ1 = sns.barplot(x = category_analysis.index, y = category_analysis.Sales, ax=axis[0], palette = colors)
categ2 = sns.barplot(x = category_analysis.index, y = category_analysis.Profit, ax=axis[1], palette = colors)
categ3 = sns.barplot(x = category_analysis.index, y = category_analysis.Quantity, ax=axis[2], palette = colors)

# Set titles to them

categ1.set(title = 'Sales')
categ2.set(title = 'Profit')
categ3.set(title = 'Quantity')

# Rotate axes for x-axis

plt.setp(categ1.get_xticklabels(), rotation = 'vertical', size = 9)
plt.setp(categ2.get_xticklabels(), rotation = 'vertical', size = 9)
plt.setp(categ3.get_xticklabels(), rotation = 'vertical', size = 9)

# Set spacing between subplots

figure.tight_layout()

# Q.2 Which one is the most profitable region

#Group the columns (Region and Profit) by category

reg_analysis = pd.DataFrame(superstore.groupby(['Region'])['Profit'].sum().reset_index())
reg_analysis

# Plot Pie Chart
#set colours to the graph

colors = ['#F72585','#7209B8','#C125F7','#F72531']
explode = [0, 0, 0, 0.1]

plt.pie(reg_analysis.Profit, labels = reg_analysis.Region, startangle = 90, autopct = "%1.0f%%", explode = explode,colors=colors, shadow = True)
plt.title("Most Profitable by Region")
plt.show()

# Q.3 Which City is the one with highest sales

#Group the columns (City,Sales and Quantity) by category and sort them in descending order
# to find first 7 Cities with highest sales

city_sales = pd.DataFrame(superstore.groupby(['City'])['Sales','Quantity'].sum().sort_values('Sales',ascending = False))
top = city_sales[:7]
top

#For 7 Cities with lowest sales

bottom = city_sales[-7:]
bottom

# Set for grouped plots

figure, axis = plt.subplots(1, 2, figsize=(12, 5))

#set colours to the graph

colors = ['#F72585','#7209B8','#C125F7','#F72531']

tops = sns.barplot(data = top, y = top.index, x = top.Sales, palette = colors, ax = axis[0])
tops.set(title = "Top 7 Cities with Highest Sales")
tops.set_yticklabels(tops.get_yticklabels(),size = 7)

# Plot Bar Plot for Best Selling Sub-Category

bottoms = sns.barplot(data = bottom, y = bottom.index, x = bottom.Sales, palette = colors, ax=axis[1])
bottoms.set(title = "Bottom 7 Cities with Lowest Sales")
bottoms.set_yticklabels(bottoms.get_yticklabels(),size = 7)

# Set spacing between subplots

figure.tight_layout()
plt.show()